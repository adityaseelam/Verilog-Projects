module universal(input clk,input [1:0] mode,input [3:0] pin, output reg[3:0] pout, input sr,input sl,input rst,output  slo, output  sro);
  
  reg [3:0] data;
  always@(posedge clk) begin
    if( rst) begin
      data<=4'b0;
      pout<=4'b0;
  end else begin 
    case(mode)
      2'b00 : begin
             data<=data;
             
      end
       2'b01 : begin
         data<={sr,data[3:1]};
       end
         2'b10 : begin
           data<={data[2:0],sl};
         end
      2'b11 : begin
        pout<=pin;
      end
    endcase
  end
  end
  assign sro=data[0];
  assign slo=data[3];
      endmodule
