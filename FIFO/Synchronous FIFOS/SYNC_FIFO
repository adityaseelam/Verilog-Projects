module FIFOSYNC1(input clk, input wr_e, input rd_e, input rst,input[7:0] data_in,output reg[7:0] data_out,output full,output empty,output reg[4:0]count);

parameter depth =16 ;
reg[7:0] memory[0:depth-1];
reg[4:0] wr_ptr;
reg[4:0] rd_ptr;

assign full={(~wr_ptr[4]==rd_ptr[4])&&(wr_ptr[3:0]==rd_ptr[3:0])};
  assign empty=(wr_ptr==rd_ptr);
always@(posedge clk) begin
if(rst) begin
wr_ptr<=0;
end else if(wr_e) begin
memory[wr_ptr]<=data_in;
wr_ptr<=wr_ptr+1;
end
end

always@(posedge clk)begin
    if(rst)begin
        rd_ptr<=0;
    end else if(rd_e)begin
       data_out<= memory[rd_ptr];
       rd_ptr<=rd_ptr+1;
    end
end

endmodule
